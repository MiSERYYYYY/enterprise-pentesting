# List of websites to check
# Others based on https://www.elastic.co/guide/en/security/7.17/prebuilt-rule-0-16-1-connection-to-commonly-abused-web-services.html
$websites = @(
    "https://github.com/MiSERYYYYY/pentesting-cheatsheet/blob/master/Web-Filtering-T1567-check.ps1"
    "https://app.mediafire.com"
    "https://www.sendspace.com"
    "https://www.box.com"
    "https://mega.io"
    "https://www.dropbox.com"
    "https://www.file.io"
    "https://wetransfer.com"
    "https://anonfile.net"
    "https://web.telegram.org"
    "https://pastebin.com"
    "https://twitter.com"
    "https://www.instagram.com"
    "https://gmail.com"
    "https://drive.google.com"
    "https://github.com"
    "https://telegram.org"
    "https://www.4s.io"
    "https://filebin.net"
    "https://ghostbin.site"
    "https://ngrok.com"
    "https://serveo.net"
    "https://zerobin.net"
    "https://controlc.com"
    "https://discord.com"
    "https://discordapp.com"
)

$headers = @{
    "User-Agent" = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.9999.999 Safari/537.36"
}

function Test-WebsiteReachability {
    param (
        [string]$url
    )

    try {
        $request = Invoke-WebRequest -Uri $url -Headers $headers -UseBasicParsing -TimeoutSec 30
        if ($request.StatusCode -eq 200) {
            Write-Host "[SUCCESS] $url" -ForegroundColor Green
        } else {
            Write-Host "$url is not reachable. Status code: $($request.StatusCode)" -ForegroundColor Red
        }
    } catch {
        Write-Host "[FAILED] $url" -ForegroundColor Red
    }
}

foreach ($site in $websites) {
    Test-WebsiteReachability $site
}
